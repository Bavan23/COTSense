version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: cotsense-postgres
    environment:
      POSTGRES_DB: cotsense_db
      POSTGRES_USER: cotsense_user
      POSTGRES_PASSWORD: cotsense_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cotsense_user -d cotsense_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # FastAPI Backend
  fastapi:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: cotsense-fastapi
    environment:
      - DATABASE_URL=postgresql://cotsense_user:cotsense_password@postgres:5432/cotsense_db
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - FASTAPI_HOST=0.0.0.0
      - FASTAPI_PORT=8000
      - FASTAPI_DEBUG=false
      - LOG_LEVEL=INFO
      - ALLOWED_ORIGINS=http://localhost:3000,http://localhost:5000,http://localhost:5173
    ports:
      - "8000:8000"
    volumes:
      - ../data:/app/data:ro  # Mount ML data as read-only
      - ml_cache:/app/.cache  # Cache for ML models
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  # Redis (Optional - for caching)
  redis:
    image: redis:7-alpine
    container_name: cotsense-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped

  # Nginx (Optional - reverse proxy)
  nginx:
    image: nginx:alpine
    container_name: cotsense-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - fastapi
    restart: unless-stopped
    profiles:
      - production

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  ml_cache:
    driver: local

networks:
  default:
    name: cotsense-network